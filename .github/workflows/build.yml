name: Build mobile apps
on:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    name: Build android
    runs-on: ubuntu-latest
    permissions:
      contents: write
    defaults:
      run:
        working-directory: ./flutter_client
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.9"

      - run: flutter pub get
        working-directory: ./flutter_client
      # - run: flutter gen-l10n
      - run: flutter build apk
      - run: flutter build appbundle

      - run: cp -r ./build ../build

      - uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: build/app/outputs/bundle/release/
  build-ios:
    name: Build ios
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./flutter_client
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64
      - run: flutter pub get
      # - run: flutter gen-l10n
      - run: flutter build ios --release --no-codesign

      - uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: /Users/runner/work/bot_client/bot_client/flutter_client/build/ios/iphoneos/Runner.app
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - run: ls -a artifacts
      - run: ls -a artifacts/android-build
      - run: ls -a artifacts/ios-build

      - uses: softprops/action-gh-release@v2
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          make_latest: true
          prerelease: false
          draft: false
          files: |
            artifacts/android-build//app-release.aab
            artifacts/ios-buildRunner.app

      # - uses: actions/create-release@v1
      #   id: create_release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: Release
      #     draft: false
      #     prerelease: false
      # - uses: actions/upload-release-asset@v1
      #   id: upload-release-asset
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip

      # - uses: ncipollo/release-action@v1
      #   if: ${{ startsWith(github.ref, 'refs/tags/') }}
      #   with:
      #     allowUpdates: true
      #     artifactErrorsFailBuild: true
      #     artifacts: artifacts
      #     body: "new release"
